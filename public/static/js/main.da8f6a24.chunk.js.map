{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/ui/NavBar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.jsx","hooks/useForm.js","components/auth/LoginScreen.jsx","components/auth/RegisterScreen.jsx","router/PublicRoute.jsx","router/PrivateRoute.jsx","router/AppRouter.jsx","reducers/uiReducers.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","cache","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","aventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","NavBar","useDispatch","name","useSelector","state","auth","className","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowMoreOneHours","clone","initEvent","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momenStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","id","resp","json","ok","msg","console","log","getState","uid","evento","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","setItem","onSelectSlot","selectable","view","components","useForm","initialState","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginValues","handleLoginInputChange","email","password","Date","getTime","RegisterScreen","rName","rEmail","rPassword1","rPassword2","formRegisValues","handleRegisInputChange","PublicRoute","isLoggedIn","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da8f6a24.chunk.js","sourcesContent":["\nconst baseUrl = process.env.REACT_APP_API_URL;\n//Esto va a ser = http://localhost:4000/api o https://calendario-backend.herokuapp.com/api dependiendo si estamos en desarrollo o producción\n\n//fetchSinToken recibe el endpoint al que quiere llamar, la data que quiero postea o enviar y el method: GET, POST...\nconst fetchSinToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`;\n\n    if ( method === 'GET') {\n        return fetch( url )\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify( data ),\n            cache: 'no-cache'\n        });\n    }\n}\n\n//Para cuando sea necesario utilizar el token en la operación\n//Si es una petición GET, hay que mandar los Headers con e token. El tojen lo tengo en localStorage\nconst fetchConToken = ( endpoint, data, method = 'GET' ) => {\n    const url = `${ baseUrl }/${ endpoint }`;\n    const token = localStorage.getItem('token')||''; //Token será igual a el valor de localStorage o null.\n\n    if ( method === 'GET') {\n        return fetch( url,{\n            method,\n            headers:{\n                'x-token': token\n            }\n        }\n             )\n    }else{\n        return fetch( url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify( data ),\n            cache: 'no-cache'\n        });\n    }\n}\nexport {\n    fetchSinToken,\n    fetchConToken\n}","export const types = {\n    uiOpenModal: '[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[Event] Events loaded',\n    eventLogout: '[Event] Event logout',\n\n    authCheking: '[auth] Checking login state',\n    authChekingFinish: '[auth] Finish Checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogout: '[auth] Logout',\n    authLogin: '[auth] Login',\n    authStartTokenRenew: '[auth] Start token renew',\n    authStartLogout: '[auth] Start logout',\n\n    regiStartRegister: '[regi] Start register',\n}","import moment from 'moment' //moment nos ayuda a trabajar con las fechas\n\nexport const prepareEvents = ( events = [])=> {\n    //Retorna un objeto el array con los objetos destructurados pero modificando en end y el start de cada uno de ellos\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment (e.end).toDate(), //moment lee el string e.end y lo convierte en Date\n            start: moment (e.start).toDate(),\n        })\n    );\n}","import { types } from \"../types/types\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport Swal from \"sweetalert2\";\n\n//Comienza el proceso de gravación de un evento\nexport const eventStartAddNew = ( event ) => {\n    return async ( dispatch, getState) => {\n        const{ uid, name } = getState().auth;\n\n        try {\n            const resp = await fetchConToken( 'events', event, 'POST');\n            const body = await resp.json();\n            //console.log(body);\n\n            if (body.ok){\n                //Asigno al evento el id que le ha asignado la base de datos y el user que lo ha creado\n                event.id = body.evento.id;\n                //Los datos del user los puedo sacar de nuestro store del user autenticado\n                event.user = {\n                    _id: uid,\n                    name: name\n                }\n                //console.log(event);\n\n                dispatch(aventAddNew( event));\n            }\n        } catch (error) {\n            console.log(error)   \n        }\n    }\n} \n\n\n//Acción para crear un nuevo evento en calendar\n//Solo deberá dispararse si el evento se ha gravado en la base de datos.\nconst aventAddNew = (event) => ({\n        type: types.eventAddNew,\n        payload: event\n});\n\n//Acción para marcar como activo el evento\nexport const aventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n});\n\n//Acción paa limpira nota activa\nexport const eventClearActiveEvent = () => ({type: types.eventClearActiveEvent})\n\n//Acción para iniciar la modificación de un evento en la base de datos\nexport const eventStartUpdate = ( event ) => {\n    return async (dispatch) => {\n        try {\n            const resp = await fetchConToken( `events/${ event.id }`, event, 'PUT');\n            const body = await resp.json();\n\n            if( body.ok ){\n                dispatch( eventUpdated( event ));\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n//Acción para editar el evento activo en strore\nconst eventUpdated = ( event ) => ({\n    type: types.eventUpdated,\n    payload: event  \n});\n\n//Acción para iniciar la eliminación de un evento\nexport const eventStartDelete = () => {\n    //Necesito acceder a datos estados del store:\n    return async (dispatch, getState) => {\n        const {id} = getState().calendar.activeEvent;\n\n        try {\n            const resp = await fetchConToken( `events/${ id }`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if( body.ok ){\n                dispatch( eventDeleted());\n            }else{\n                Swal.fire('Error', body.msg, 'error');\n            }\n            \n        } catch (error) {\n            console.log(error)\n        }\n    }\n}\n\n//Aación para borrar un evento en el store\nconst eventDeleted = () => ({type: types.eventDeleted});\n\n//Ación y leerá/recogerá todos los eventos de la base de datos.\nexport const eventStartLoading = () => {\n    return async ( dispatch ) => {\n        try {\n            const resp = await fetchConToken( 'events');\n            const body = await resp.json();\n            const events =prepareEvents(body.eventos );\n            dispatch( eventLoaded(events));\n        } catch (error) {\n            console.log(error)          \n        }  \n    }\n}\n\nconst eventLoaded = (events) =>({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout =() => ({type: types.eventLogout});\n\n\n\n\n//disparará la acción al reducer para cargar los eventos en el store.","import { fetchSinToken, fetchConToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport Swal from \"sweetalert2\";\nimport { eventLogout } from \"./events\";\n\n//Para comenzar el preoceso de autenticación\n//Es una función asícrona gracias al thunk, por eso ponemos un return. Si no es asíncrona no es necesario el return \nexport const startLogin = (email, password) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken( 'auth', {email, password }, 'POST' );\n        const body = await resp.json();\n    \n        if( body.ok ){\n            //Guardo el token el el localStorage\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startRegister = ( email, password, name ) => {\n    return async( dispatch ) => {\n        const resp = await fetchSinToken( 'auth/new', {email, password, name }, 'POST' );\n        const body = await resp.json();\n\n        if( body.ok ){\n            //Guardo el token el el localStorage\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{\n            Swal.fire('Error', body.msg, 'error');\n        }\n    }\n}\n\nexport const startCheking = () => {\n    return async (dispatch)=>{\n        //Aquí vamos a comenzar a revalidar el token\n        const resp = await fetchConToken( 'auth/renew');\n        const body = await resp.json();\n\n        if( body.ok ){\n            //Guardo el token el el localStorage\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime() );\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{\n\n            //Si algo ha salido mal y no se ha podido revalidar el token hay que finalizarlo\n            dispatch( checkingFinish());\n        }\n        \n    }\n}\n\nconst checkingFinish = () => ({type: types.authChekingFinish});\n\n//Ahora hay que hacer el dispatch para gravar la información del usuario\nconst login = ( user ) => ({\n    type: types.authLogin,\n    payload: user\n});\n\nexport const startLogout = () => {\n    return ( dispatch )=> {\n        localStorage.clear();\n        dispatch( logout());\n        dispatch( eventLogout() );\n    }\n}\n\nconst logout = () => ({ type: types.authLogout})\n\n\n\n\n\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const NavBar = () => {\n\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch( startLogout());\n    }\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb4\">\n            <span className=\"navbar-brand\"> {name} </span>\n            <button className=\"btn btn-outline-danger\"\n                onClick={ handleLogout }\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n            \n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event; //Destructuro el event\n    return (\n        <div>\n            <strong>{ title }</strong>\n            <span> - { user.name }</span>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal = () => ({ type: types.uiOpenModal});\nexport const uiCloseModal = () => ({ type: types.uiCloseModal});\n","import React, { useState, useEffect } from 'react';\nimport moment from \"moment\";\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from \"sweetalert2\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartUpdate, eventStartAddNew } from \"../../actions/events\";\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nModal.setAppElement('#root'); //hay que poner el elemeto raiz de React <div id=\"root\"></div>\n\nconst now = moment().minutes(0).seconds(0).add(1,'hours'); //Seleccionamos la hora\nconst nowMoreOneHours = now.clone().add(1, 'hours');\n\nconst initEvent ={\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: nowMoreOneHours.toDate()\n}\n\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n\n    //Mantendrá el estado del campo Fecha y Hora incial\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowMoreOneHours.toDate());\n    const [titleValid, setTitleValid] = useState( true );\n\n    //Accedo al state de modalOpen para abrir o cerrar el modal\n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar);\n\n    \n    //Para trabajar con la información del formulario\n    const [formValues, setFormValues] = useState(initEvent);\n\n    //Extraigo los valores de notes y title. start y end\n    const { notes, title, start, end} = formValues;\n\n    //Este effect está atento de los cambio de activeEvent para cargar sus datos en el modal\n    useEffect(() => {\n        if ( activeEvent ){\n            setFormValues( activeEvent );\n        } else {\n            setFormValues( initEvent );\n        }\n    }, [activeEvent, setFormValues])\n\n    \n    const handleInputChange = ({target} ) => { //Del evento que recibe solo me interesa el Target\n        setFormValues({\n            ...formValues,  //Quiero los valores que tenga formValues\n            [target.name]:target.value //Solo cambio el name que me traiga el target al value que traiga al llamarlo\n        })\n    }\n    const closeModal = ()=>{\n        dispatch( uiCloseModal());       \n        dispatch (eventClearActiveEvent());\n        //Pongo el formulario con sus valores vacios.\n        setFormValues( initEvent );\n    }\n\n    const handleStatDateChange= ( e)=>{ //Recibe el cambio de dateTimePicker. La es es la fecha \n        setDateStart( e );\n        //Cambio el valor de dateStart en el formulario\n        setFormValues({\n            ...formValues,  //Quiero los valores que tenga formValues\n            start: e\n        })\n        \n    }\n    const handleEndDateChange = ( e ) => {\n        setDateEnd( e );\n        setFormValues({\n            ...formValues,  //Quiero los valores que tenga formValues\n            end: e \n        })\n    }\n\n    const handleSubmitForm = ( e ) => {\n        e.preventDefault();\n        //Las fechas las tengo en instancias de date normal de JS, pero las necesitamos de moment\n        const momenStart = moment( start );\n        const momentEnd = moment (end );\n\n        if ( momenStart.isSameOrAfter( momentEnd )){\n            return Swal.fire('Error', 'La fecha de fin debe de ser mayor a la fecha de inicio', 'error');\n        }\n\n        if ( title.trim().length < 3) {\n            //Creo un estado nuevo const [titleValid, setTitleValid] = useState( true )\n            return setTitleValid( false ); //Cambio el estado\n        }\n\n        //Si hay un evento activo significa que se está modificando. Si no es que es una creación de un nuevo evento\n        if ( activeEvent ) {\n            dispatch( eventStartUpdate( formValues ));\n        } else {\n            //Realizar gravación en base de datos\n            dispatch( eventStartAddNew( formValues));\n        }\n        setTitleValid( true );\n        closeModal();\n        \n    }\n\n    return (\n        <Modal\n          isOpen={ modalOpen } //Muestra u oculta el modal\n          onRequestClose={closeModal}//Marca la acción al cerrar el modal (clicar fuera)\n          style={customStyles} //Estilo que hemos mostrado más arriba\n          closeTimeoutMS={200} //ralentiza el cierre\n          className=\"modal\"//La clase moda y modal-fondo están definidas en styles.css\n          overlayClassName=\"modal-fondo\"//className que se aplicará a la superposición.\n        >\n            <h1> { (activeEvent)? 'Editar evento':'Nuevo evento'} </h1>\n            <hr />\n            <form\n                className=\"container\"\n                onSubmit={ handleSubmitForm }\n            >\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStatDateChange }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChange }\n                        value={ dateEnd }\n                        minDate={ dateStart} //No permite una fecha inferior\n                        className=\"form-control\"\n                    />\n                </div>\n\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent } from '../../actions/events';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch()\n\n    const handleOpenModal = ()=>{\n        dispatch(eventClearActiveEvent());\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button\n            className=\"btn btn-primary fab\"\n            onClick={handleOpenModal}\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handleDelete = () => {\n        dispatch(eventStartDelete());\n    }\n    return (\n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={ handleDelete }  \n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento </span>\n        </button>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport {Calendar, momentLocalizer} from 'react-big-calendar';\nimport moment from 'moment';\nimport 'moment/locale/es';\nimport { NavBar } from '../ui/NavBar';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { messages } from \"../../helpers/calendar-messages-es\";\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { aventSetActive, eventClearActiveEvent, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es');\n\n//Configure el localizador proporcionando el objeto de moment (o globalize) al localizador correcto.\nconst localizer = momentLocalizer(moment);\n\n// const events = [{\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(), //new Date()\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notas: 'Comprar el pastel',\n//     user:{\n//         _id: '123',\n//         name: 'Ezequiel'\n//     }\n// }]\n\nexport const CalendarScreen = () => {\n    //Creo el estado para saber dónde abrir la aplicación:\n    //Coge el valor del localStorage y si no hay coge 'month'\n    const [lastView, setLastView] = useState(localStorage.getItem('lasView')||'month')\n    const dispatch = useDispatch();\n    const {events, activeEvent} = useSelector(state => state.calendar);\n    const {uid} = useSelector(state => state.auth);\n\n    \n    //leer del store los eventos\n    useEffect(() => {\n        dispatch( eventStartLoading() )\n    }, [dispatch])\n   \n    const onDoubleClick = (e) =>{\n        //Ejecuto la acción para actival el modal\n        dispatch( uiOpenModal());\n    }\n\n    const onSelectEvent = (e) =>{\n        //Hace que el evento sea el evento activo\n        dispatch( aventSetActive ( e ) );\n    }\n\n    const onViewChange = (e) =>{\n        setLastView(e); //Llamo al useState.\n        //Guardo el (e) en el localStorage (week, day, month. agenda)\n        localStorage.setItem('lasView', e);\n    }\n\n    const onSelectSlot = (e) => {\n        //Desactiva el evento y elimina el botón de borrar\n        dispatch( eventClearActiveEvent());\n    }\n\n    const eventStyleGetter = ( event, start, end, isSelected )=>{ //En estos parámetros están todas las propiedades de los eventos\n        //Lo que sea que regrese esta función, será el estilo de aplicará a ese evento en particular\n\n        const style = {\n            backgroundColor: ( uid === event.user._id) ? '#367CF7': '#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        }\n    };\n\n    return (\n        <div className=\"calendar-screen\">\n            <NavBar />\n            <Calendar  //Componente BigCalendar\n                localizer={localizer} //Es el que tenemos arriba\n                events={events} //Es una lista de eventos\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={messages}\n                eventPropGetter={eventStyleGetter}\n                onDoubleClickEvent={onDoubleClick}\n                onSelectEvent={onSelectEvent}\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n            <AddNewFab />\n            \n            {/* Activo el botón si hay un Evento activo */}\n            {( activeEvent ) && <DeleteEventFab />}\n\n            <CalendarModal />\n        </div>\n    )\n}\n","/* *\n * \n * Lee la caja de texto de un input\n * */\n\nimport { useState } from 'react'\n\nexport const useForm = ( initialState = {}) => { //El estado inicial va a ser un objeto. Lo ponemos vacío para que no pete si no se envía nada\n\n    const [values, setValues] = useState(initialState);\n\n    // creo un método para resetear la lisra de todos\n    const reset = () => {\n        setValues( initialState ) //Da a values el estado inicial\n    }\n\n    const handleInputChange = ( {target} )=>{ //la función recibe el evento del onChange del input. Extraigo del evento el target\n                                              //Con esto puedo acceder a todos los atributos del input\n        //Para que se vea la información del input en cuadro de texto hay que llamar al setValues\n        setValues({ \n            ...values, //Desestructuramos el values por si acaso hay propiedades que no están cambiando\n            [target.name]: target.value //El nombre de la propiedad está calculado. Viene deñ target, y su valor vendrá tambien del target.hljs-value\n        });\n    }\n\n    //Se puede retornar como un objetos, como un array o solo los values. En este caso lo haremos como u arreglo.\n    return [values, handleInputChange, reset ] //El segundo elemento está retornando una función para poner los valores al formulario\n}\n","import React from 'react';\nimport './login.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startLogin } from '../../actions/auth';\n\n\nexport const LoginScreen = () => {\n\n    const dispatch = useDispatch();\n\n    //Utilizo el custom hook useForm que me prove del método para recoger la información\n    //de los inputs \"handleLoginInputChange\" y de los  valores introducidos \"formLoginValues\"\n    //Dejo el objeto del estado inicial con valores para no tener que escribir\n    const [formLoginValues, handleLoginInputChange] = useForm({\n        lEmail: 'diana@gmail.com',\n        lPassword: '123456'\n    });\n    //Destructuro para poder utilizar las variables de formLoginValues\n    const { lEmail, lPassword } = formLoginValues;\n    const handleLogin = (e) => {\n        e.preventDefault();\n        //LLamo a la acción startLogin\n        dispatch( startLogin (lEmail, lPassword) );\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Identificación</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"button\"\n                                className=\"btnSubmit\"\n                                value=\"Registrarse\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                {/* <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div> */}\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport './login.css';\nimport { useForm } from '../../hooks/useForm';\nimport { useDispatch } from 'react-redux';\nimport { startRegister } from '../../actions/auth';\nimport Swal from 'sweetalert2';\n\nexport const RegisterScreen = () => {\n    const dispatch = useDispatch();\n\n\n    const [formRegisValues, handleRegisInputChange] = useForm({\n        rName: 'Diana',\n        rEmail: 'diana@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n\n    });\n\n    const { rName, rEmail, rPassword1, rPassword2  } = formRegisValues;\n\n    const handleRegister = ( e ) => {\n        e.preventDefault();\n        //Validar que las constraseñas son iguales\n        if( rPassword1 !== rPassword2 ){\n            return Swal.fire('Error', 'Las contraseñas deben de ser iguales', 'error');\n        }\n        dispatch( startRegister ( rEmail, rPassword1, rName))\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                {/* <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div> */}\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\"\n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({ //Necesita unos props obligatorios:\n    isLoggedIn,  //Necesito saber si está autenticado\n    component: Component, //Necesito el componente a renderizar. Renombro el component a Component\n    ...rest // El resto de argumentos como el exact, el path.., también los necesito. Los almaceno en el operador ...rest que crea un array para pasarlos al componente\n}) => {\n    return ( //Regresamos un <Route> con resto de propiedades que estoy recibiendo ...rest\n        <Route {...rest}\n            component={ (props) => (\n                (isLoggedIn ) \n                    ? (<Redirect to=\"/\" />)\n                    : (<Component{...props} />)\n            )}\n        />\n    )\n}\n\n//Hago obligatorio el envío del isLoggedIn y del component\nPublicRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n//El <Route retorna el componente de forma condicional. El component se puede llamar con un callbak que recibe como\n// argumentos las props: History, location, params y shearch\n//El componente lo envío de forma condicional con un ternario. Si isAuthenticated es true Renderiza el Component solicitado com las props expandidad\n//Si isAuthenticated es false redierecciona a la página login\n//Importo el PropTypes para obligar a enviar los props del componente","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({ //Necesita unos props obligatorios:\n    isLoggedIn,  //Necesito saber si está autenticado\n    component: Component, //Necesito el componente a renderizar. Renombro el component a Component\n    ...rest // El resto de argumentos como el exact, el path.., también los necesito. Los almaceno en el operador ...rest que crea un array para pasarlos al componente\n}) => {\n    // A través de: rest.location.pathname puedo llegar a la información del path actual\n    return ( //Regresamos un <Route> con resto de propiedades que estoy recibiendo ...rest\n        <Route {...rest}\n            component={ (props) => (\n                (isLoggedIn ) \n                    ? (<Component{...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n        />\n    )\n}\n\n//Hago obligatorio el envío del isLoggedIn y del component\nPrivateRoute.propTypes = {\n    isLoggedIn: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n\n//El <Route retorna el componente de forma condicional. El component se puede llamar con un callbak que recibe como\n// argumentos las props: History, location, params y shearch\n//El componente lo envío de forma condicional con un ternario. Si isAuthenticated es true Renderiza el Component solicitado com las props expandidad\n//Si isAuthenticated es false redierecciona a la página login\n//Importo el PropTypes para obligar a enviar los props del componente\n\n\n","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n  } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { LoginScreen } from '../components/auth/LoginScreen';\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\nimport { startCheking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n\n    const dispatch = useDispatch();\n    //Tengo que leer el estado del checking y uid en el store\n    const {checking, uid} = useSelector(state => state.auth)\n\n    useEffect(() => {\n        dispatch ( startCheking() );\n    }, [dispatch])\n\n    if ( checking ){ //Componente que saldrá mientras está haciendo el Cheking\n        return ( <h1> ESPERE ...</h1>)\n    }\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <PrivateRoute\n                        exact\n                        path=\"/\"\n                        component={ CalendarScreen }\n                        isLoggedIn = { !!uid }\n                    />    \n                    <PublicRoute\n                        exact\n                        path=\"/login\"\n                        component={ LoginScreen }\n                        isLoggedIn = { !!uid }\n                    />    \n                    <PublicRoute\n                        exact\n                        path=\"/regis\"\n                        component={ RegisterScreen }\n                        isLoggedIn = { !!uid }\n                    />\n                    <Redirect to=\"/login\"/>    \n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\n","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false,\n}\n\nexport const uiReducer = ( state = initialState, action )=>{\n\n    switch ( action.type ) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\";\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefe',\n//     start: moment().toDate(), //new Date()\n//     end: moment().add(2, 'hours').toDate(),\n//     notes: 'Comprar el pastel',\n//     user:{\n//         _id: '123',\n//         name: 'Ezequiel'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = ( state = initialState, action ) => {\n    \n    switch ( action.type ){\n\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [ //Evensts será un array con los eventos anteriores más el actual\n                    ...state.events,\n                    action.payload\n                ]\n            } \n            \n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload : e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload ]\n            }  \n            \n        case types.eventLogout:\n            return {\n                ...initialState\n            }\n            \n        \n        default:\n            return state;\n    }\n} ","import { types } from \"../types/types\";\n\nconst initialState = {\n    checking: true, //Al comenzar la aplicación, debo chequera el estado del usuario\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = ( state = initialState, action ) => {\n\n    switch ( action.type ) {\n        case types.authLogin:\n            return {\n                ...state,\n                ...action.payload,\n                checking: false\n            }\n\n        case types.authChekingFinish:\n            return {\n                ...state,\n                checking: false\n            }\n            \n        case types.authLogout:\n            return {\n                checking: false\n            }\n        default:\n            return state;\n    }\n}","import { combineReducers } from \"redux\";\nimport { uiReducer } from \"./uiReducers\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { authReducer } from \"./authReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})\n\n","\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n//Al createStore enviamos el const reducers para poder utilizar todos los reducers que creemos\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers( //Ponemos la constante potenciadora y aplicamos el Middleware\n        applyMiddleware( thunk )\n    )\n);","import React from 'react'\nimport { Provider } from 'react-redux'\n\nimport { AppRouter } from './router/AppRouter'\nimport { store } from './store/store'\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={ store }>\n            <AppRouter />\n        </Provider> \n    )\n}\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}